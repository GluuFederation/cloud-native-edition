# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oxd-server.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "oxd-server.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ include "oxd-server.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "oxd-server.name" . }}
        release: {{ .Release.Name }}
      {{- if .Values.global.istio.ingress }}
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      {{- end }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
    {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
      {{- if .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- include "oxd-server.topology-spread-constraints" . | indent 8 }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{- with .Values.tolerations }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ include "oxd-server.name" . }}
          lifecycle:
{{- toYaml .Values.lifecycle | nindent 12 }}          
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- if and (and (eq .Values.global.isDomainRegistered "false") (eq .Values.global.enableSecurityContextWithNonRegisteredDomain "false" )) (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
          securityContext:
            runAsUser: 0
            runAsNonRoot: false
          {{- else }}
          securityContext:
            runAsUser: 1000
            runAsNonRoot: true
          {{- end }}
          env:
            {{- include "oxd-server.usr-envs" . | indent 12 }}
            {{- include "oxd-server.usr-secret-envs" . | indent 12 }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and (eq .Values.global.isDomainRegistered "false") (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
          command:
            - /bin/sh
            - -c 
            - |
                /usr/bin/python3 /scripts/updatelbip.py &
                /app/scripts/entrypoint.sh
          {{- end }}
          ports:
            - containerPort: 8444
            - containerPort: 8443
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-config-cm
            {{ if .Values.global.usrEnvs.secret }}
            - secretRef:
                name: {{ .Release.Name }}-global-user-custom-envs
            {{- end }}
            {{ if .Values.global.usrEnvs.normal }}
            - configMapRef:
                name: {{ .Release.Name }}-global-user-custom-envs
            {{- end }}
          livenessProbe:
{{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
{{- toYaml .Values.readinessProbe | nindent 12 }}
          volumeMounts:
          {{- with .Values.volumeMounts }}
{{- toYaml . | nindent 12 }}
          {{- end }}
          {{ if or (eq .Values.global.configSecretAdapter "aws") (eq .Values.global.configAdapterName "aws") }}
            - mountPath: {{ .Values.global.cnAwsSharedCredentialsFile }}
              name: aws-shared-credential-file
              subPath: aws_shared_credential_file
            - mountPath: {{ .Values.global.cnAwsConfigFile }}
              name: aws-config-file
              subPath: aws_config_file
            - mountPath: {{ .Values.global.cnAwsSecretsReplicaRegionsFile }}
              name: aws-secrets-replica-regions
              subPath: aws_secrets_replica_regions
          {{- end }}
          {{- if eq .Values.global.gluuPersistenceType "sql" }}
            - name: sql-pass
              mountPath: "/etc/gluu/conf/sql_password"
              subPath: sql_password
          {{- end }}
          {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.gluuPersistenceType "spanner") }}
            - mountPath: {{ .Values.global.cnGoogleApplicationCredentials }}
              name: google-sa
              subPath: google-credentials.json
          {{- end }}
          {{- if or (eq .Values.global.gluuPersistenceType "couchbase") (eq .Values.global.gluuPersistenceType "hybrid") }}
            - name: cb-pass
              mountPath: "/etc/gluu/conf/couchbase_password"
              subPath: couchbase_password
            {{- if not .Values.global.istio.enabled }}
            - name: cb-crt
              mountPath: "/etc/certs/couchbase.crt"
              subPath: couchbase.crt
            {{- end }}
          {{- end }}
            {{- if and (eq .Values.global.isDomainRegistered "false") (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
            - name: {{ include "oxd-server.name" . }}-updatelbip
              mountPath: /scripts
            {{- end }}
          {{- if and ( or ( .Values.global.opendj.enabled ) ( .Values.global.jackrabbit.enabled) ) (or (eq .Values.global.storageClass.provisioner "microk8s.io/hostpath" ) (eq .Values.global.storageClass.provisioner "k8s.io/minikube-hostpath")) }}
          resources: {}
          {{- else if .Values.global.cloud.testEnviroment }}
          resources: {}
          {{- else }}
          resources:
{{- toYaml .Values.resources | nindent 12 }}
          {{- end }}
      volumes:
      {{- with .Values.volumes }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if or (eq .Values.global.configSecretAdapter "aws") (eq .Values.global.configAdapterName "aws") }}
        - name: aws-shared-credential-file
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_shared_credential_file
                path: aws_shared_credential_file
        - name: aws-config-file
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_config_file
                path: aws_config_file
        - name: aws-secrets-replica-regions
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_secrets_replica_regions
                path: aws_secrets_replica_regions
      {{- end }}
      {{- if eq .Values.global.gluuPersistenceType "sql" }}
        - name: sql-pass
          secret:
            secretName: {{ .Release.Name }}-sql-pass
      {{- end }}
      {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.gluuPersistenceType "spanner") }}
        - name: google-sa
          secret:
            secretName: {{ .Release.Name }}-google-sa
      {{- end }}
      {{- if or (eq .Values.global.gluuPersistenceType "couchbase") (eq .Values.global.gluuPersistenceType "hybrid") }}
        - name: cb-pass
          secret:
            secretName: {{ .Release.Name }}-cb-pass
        {{- if not .Values.global.istio.enabled }}
        - name: cb-crt
          secret:
            secretName: {{ .Release.Name }}-cb-crt
        {{- end }}
      {{- end }}
        {{- if and (eq .Values.global.isDomainRegistered "false") (or (eq .Values.global.storageClass.provisioner "kubernetes.io/aws-ebs") (eq .Values.global.storageClass.provisioner "openebs.io/local")) }}
        - name: {{ include "oxd-server.name" . }}-updatelbip
          configMap:
            name: {{ .Release.Name }}-updatelbip
        {{- end }}
      {{- if eq .Values.global.isDomainRegistered "false" }}
      hostAliases:
      - ip: {{ .Values.global.lbIp }}
        hostnames:
        - {{ .Values.global.domain }}
      {{- end }}

