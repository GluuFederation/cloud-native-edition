# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
# -- Nginx ingress definitions chart
certManager:
  # Enable deploying a certificate that uses dns01 challenge instead of passing an annotation nginx-ingress.ingress.additionalAnnotations for nginx http01 challenge.
  certificate:
    enabled: false
    issuerKind: ClusterIssuer
    # Issuer name which you will create manually. Can be letsencrypt-production.
    issuerName: ""
    issuerGroup: cert-manager.io
ingress:
  enabled: true
  # -- Enable use of legacy API version networking.k8s.io/v1beta1 to support kubernetes 1.18. This flag should be removed next version release along with nginx-ingress/templates/ingress-legacy.yaml.
  legacy: false
  path: /
  # -- Enable Admin UI endpoints /identity
  adminUiEnabled: true
  # -- Admin UI ingress resource labels. key app is taken.
  adminUiLabels: { }
  # -- Admin UI ingress resource additional annotations.
  adminUiAdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/openid-configuration
  openidConfigEnabled: true
  # -- openid-configuration ingress resource labels. key app is taken
  openidConfigLabels: { }
  # -- openid-configuration ingress resource additional annotations.
  openidAdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/uma2-configuration
  uma2ConfigEnabled: true
  # -- uma 2 config ingress resource labels. key app is taken
  uma2ConfigLabels: { }
  # -- uma2 config ingress resource additional annotations.
  uma2AdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/webfinger
  webfingerEnabled: true
  # -- webfinger ingress resource labels. key app is taken
  webfingerLabels: { }
  # -- webfinger ingress resource additional annotations.
  webfingerAdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/simple-web-discovery
  webdiscoveryEnabled: true
  # -- webdiscovery ingress resource labels. key app is taken
  webdiscoveryLabels: { }
  # -- webdiscovery ingress resource additional annotations.
  webdiscoveryAdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/scim-configuration
  scimConfigEnabled: false
  # -- webdiscovery ingress resource labels. key app is taken
  scimConfigLabels: { }
  # -- SCIM config ingress resource additional annotations.
  scimConfigAdditionalAnnotations: { }
  # -- Enable SCIM endpoints /scim
  scimEnabled: false
  # -- scim config ingress resource labels. key app is taken
  scimLabels: { }
  # -- SCIM ingress resource additional annotations.
  scimAdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/fido-configuration
  u2fConfigEnabled: true
  # -- u2f config ingress resource labels. key app is taken
  u2fConfigLabels: { }
  # -- u2f config ingress resource additional annotations.
  u2fAdditionalAnnotations: { }
  # -- Enable endpoint /.well-known/fido2-configuration
  fido2ConfigEnabled: false
  # -- fido2 config ingress resource labels. key app is taken
  fido2ConfigLabels: { }
  # -- fido2 config ingress resource additional annotations.
  fido2ConfigAdditionalAnnotations: { }
  # -- Enable all fido2 endpoints
  fido2Enabled: false
  # -- fido2 ingress resource labels. key app is taken
  fido2Labels: { }
  # -- Enable Auth server endpoints /oxauth
  authServerEnabled: true
  # -- Auth server config ingress resource labels. key app is taken
  authServerLabels: { }
  # -- Auth server ingress resource additional annotations.
  authServerAdditionalAnnotations: { }
  # -- Enable casa endpoints /casa
  casaEnabled: false
  # -- Casa ingress resource labels. key app is taken
  casaLabels: { }
  # -- Casa ingress resource additional annotations.
  casaAdditionalAnnotations: { }
  # -- Enable passport endpoints /idp
  passportEnabled: false
  # -- passport ingress resource labels. key app is taken.
  passportLabels: { }
  # -- passport ingress resource additional annotations.
  passportAdditionalAnnotations: { }
  # -- Enable shibboleth endpoints /idp
  shibEnabled: false
  # -- shibboleth ingress resource labels. key app is taken.
  shibLabels: { }
  # -- shibboleth ingress resource additional annotations.
  shibAdditionalAnnotations: { }
  # -- Additional labels that will be added across all ingress definitions in the format of {mylabel: "myapp"}
  additionalLabels: { }
  # -- Additional annotations that will be added across all ingress definitions in the format of {cert-manager.io/issuer: "letsencrypt-prod"}. key app is taken
  # Enable client certificate authentication
  # nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional"
  # Create the secret containing the trusted ca certificates
  # nginx.ingress.kubernetes.io/auth-tls-secret: "gluu/tls-certificate"
  # Specify the verification depth in the client certificates chain
  # nginx.ingress.kubernetes.io/auth-tls-verify-depth: "1"
  # Specify if certificates are passed to upstream server
  # nginx.ingress.kubernetes.io/auth-tls-pass-certificate-to-upstream: "true"
  additionalAnnotations: { }
  # Change ingressClassName to "public" if using microk8s
  ingressClassName: nginx
  hosts:
  - demoexample.gluu.org
  tls:
  - secretName: tls-certificate # DON'T change
    hosts:
    - demoexample.gluu.org
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 8080