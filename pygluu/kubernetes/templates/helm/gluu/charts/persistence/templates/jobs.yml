# License terms and conditions for Gluu Cloud Native Edition:
# https://www.apache.org/licenses/LICENSE-2.0
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "persistence.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "persistence.labels" . | indent 4 }}
{{- if .Values.additionalLabels }}
{{ toYaml .Values.additionalLabels | indent 4 }}
{{- end }}
{{- if .Values.additionalAnnotations }}
  annotations:
{{ toYaml .Values.additionalAnnotations | indent 4 }}
{{- end }}
spec:
  ttlSecondsAfterFinished: {{ .Values.global.jobTtlSecondsAfterFinished }}
  template:
    metadata:
      name: {{ include "persistence.name" . }}
      labels:
        app: {{ include "persistence.name" . }}
    spec:
    {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      dnsPolicy: {{ .Values.dnsPolicy | quote }}
    {{- with .Values.dnsConfig }}
      dnsConfig:
{{ toYaml . | indent 8 }}
    {{- end }}
      restartPolicy: Never
      {{- if .Values.nodeSelector }}
      nodeSelector:
{{- toYaml .Values.nodeSelector | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity:
{{- toYaml .Values.affinity | nindent 8 }}
      {{- end }}
      {{- if .Values.tolerations }}
      tolerations:
      {{- with .Values.tolerations }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      containers:
      - name: {{ include "persistence.name" . }}
        lifecycle:
{{- toYaml .Values.lifecycle | nindent 10 }}        
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        securityContext:
          runAsUser: 1000
          runAsNonRoot: true
        env:
          {{- include "persistence.usr-envs" . | indent 12 }}
          {{- include "persistence.usr-secret-envs" . | indent 12 }}
        {{- if .Values.global.istio.enabled }}
        command:
          - tini
          - -g
          - --
          - /bin/sh
          - -c
          - |
            /app/scripts/entrypoint.sh
            curl -X POST http://localhost:15020/quitquitquit
        {{- end }}
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config-cm
        {{ if .Values.global.usrEnvs.secret }}
        - secretRef:
            name: {{ .Release.Name }}-global-user-custom-envs
        {{- end }}
        {{ if .Values.global.usrEnvs.normal }}
        - configMapRef:
            name: {{ .Release.Name }}-global-user-custom-envs
        {{- end }}
        volumeMounts:
          {{- with .Values.volumeMounts }}
{{- toYaml . | nindent 10 }}
          {{- end }}
        {{ if or (eq .Values.global.configSecretAdapter "aws") (eq .Values.global.configAdapterName "aws") }}
          - mountPath: {{ .Values.global.cnAwsSharedCredentialsFile }}
            name: aws-shared-credential-file
            subPath: aws_shared_credential_file
          - mountPath: {{ .Values.global.cnAwsConfigFile }}
            name: aws-config-file
            subPath: aws_config_file
          - mountPath: {{ .Values.global.cnAwsSecretsReplicaRegionsFile }}
            name: aws-secrets-replica-regions
            subPath: aws_secrets_replica_regions
        {{- end }}
        {{- if .Values.global.jackrabbit.enabled }}
          - name: gluu-jackrabbit-admin-pass
            mountPath: /etc/gluu/conf/jackrabbit_admin_password
            subPath: jackrabbit_admin_password
        {{- end }}
        {{- if eq .Values.global.gluuPersistenceType "sql" }}
          - name: sql-pass
            mountPath: "/etc/gluu/conf/sql_password"
            subPath: sql_password
        {{- end }}
        {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.gluuPersistenceType "spanner") }}
          - mountPath: {{ .Values.global.cnGoogleApplicationCredentials }}
            name: google-sa
            subPath: google-credentials.json
        {{- end }}
        {{- if or (eq .Values.global.gluuPersistenceType "couchbase") (eq .Values.global.gluuPersistenceType "hybrid")  }}
          - name: cb-pass
            mountPath: "/etc/gluu/conf/couchbase_password"
            subPath: couchbase_password
          - name: cb-super-pass
            mountPath: "/etc/gluu/conf/couchbase_superuser_password"
            subPath: couchbase_superuser_password
          {{- if not .Values.global.istio.enabled }}
          - name: cb-crt 
            mountPath: "/etc/certs/couchbase.crt"
            subPath: couchbase.crt
          {{- end }}
        {{- end }}
        resources:
{{- toYaml .Values.resources | nindent 10 }}
      volumes:
      {{- with .Values.volumes }}
{{- toYaml . | nindent 8 }}
      {{- end }}
      {{ if or (eq .Values.global.configSecretAdapter "aws") (eq .Values.global.configAdapterName "aws") }}
        - name: aws-shared-credential-file
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_shared_credential_file
                path: aws_shared_credential_file
        - name: aws-config-file
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_config_file
                path: aws_config_file
        - name: aws-secrets-replica-regions
          secret:
            secretName: {{ .Release.Name }}-aws-config-creds
            items:
              - key: aws_secrets_replica_regions
                path: aws_secrets_replica_regions
      {{- end }}
      {{- if .Values.global.jackrabbit.enabled }}
        - name: gluu-jackrabbit-admin-pass
          secret:
            secretName: gluu-jackrabbit-admin-pass
      {{- end }}
      {{- if eq .Values.global.gluuPersistenceType "sql" }}
        - name: sql-pass
          secret:
            secretName: {{ .Release.Name }}-sql-pass
        {{- end }}
      {{ if or (eq .Values.global.configSecretAdapter "google") (eq .Values.global.gluuPersistenceType "spanner") }}
        - name: google-sa
          secret:
            secretName: {{ .Release.Name }}-google-sa
      {{- end }}
      {{- if or (eq .Values.global.gluuPersistenceType "couchbase") (eq .Values.global.gluuPersistenceType "hybrid")  }}
        - name: cb-pass
          secret:
            secretName: {{ .Release.Name }}-cb-pass
        - name: cb-super-pass
          secret:
            secretName: {{ .Release.Name }}-superuser-cb-pass
        {{- if not .Values.global.istio.enabled }}
        - name: cb-crt 
          secret:
            secretName: {{ .Release.Name }}-cb-crt
        {{- end }}
      {{- end }}
