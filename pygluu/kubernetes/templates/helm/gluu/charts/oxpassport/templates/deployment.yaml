# License terms and conditions:
# https://www.gluu.org/license/enterprise-edition/
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oxpassport.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "oxpassport.labels" . | indent 4}}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "oxpassport.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "oxpassport.name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        {{- if and (and .Values.global.cloud.enabled (eq .Values.global.isDomainRegistered "false") ) (eq .Values.global.provisioner "kubernetes.io/aws-ebs") }}
        command:
          - /bin/sh
          - -c
          - |
              /usr/bin/python /scripts/updatelbip.py &
              /app/scripts/entrypoint.sh
        {{- end }}
        ports:
          - name: http
            containerPort: 8090
            protocol: TCP
        envFrom:
          - configMapRef:
              name: {{ include "oxpassport.name" . }}
        volumeMounts:
        {{- if and (and .Values.global.cloud.enabled (eq .Values.global.isDomainRegistered "false") ) (eq .Values.global.provisioner "kubernetes.io/aws-ebs") }}
          - name: {{ include "oxpassport.name" . }}-updatelbip
            mountPath: /scripts
        {{- end }}
        {{- if or (eq .Values.global.gluuPersistenceType "couchbase") (eq .Values.global.gluuPersistenceType "hybrid") }}
          - name: cb-pass
            mountPath: "/etc/gluu/conf/couchbase_password"
            subPath: couchbase_password
          - name: cb-crt 
            mountPath: "/etc/certs/couchbase.crt"
            subPath: couchbase.crt
        {{- end }}
        livenessProbe:
          httpGet:
            path: /passport/token
            port: http
          initialDelaySeconds: 30
          periodSeconds: 30
          failureThreshold: 20
        readinessProbe:
          httpGet:
            path: /passport/token
            port: http
          initialDelaySeconds: 25
          periodSeconds: 25
          failureThreshold: 20
        resources:
          {{- toYaml .Values.resources | nindent 12 }}
      {{- if eq .Values.global.isDomainRegistered "false"}}
      hostAliases:
       - ip: {{ .Values.global.nginxIp }}
         hostnames:
         - {{ .Values.global.domain }}
      {{- end }}
      volumes:
      {{- if and (and .Values.global.cloud.enabled (eq .Values.global.isDomainRegistered "false") ) (eq .Values.global.provisioner "kubernetes.io/aws-ebs") }}
        - name: {{ include "oxpassport.name" . }}-updatelbip
          configMap:
            name: {{ .Release.Name }}-updatelbip
      {{- end }}
      {{- if or (eq .Values.global.gluuPersistenceType "couchbase") (eq .Values.global.gluuPersistenceType "hybrid") }}
        - name: cb-pass
          secret:
            secretName: {{ .Release.Name }}-cb-pass 
        - name: cb-crt 
          secret:
            secretName: {{ .Release.Name }}-cb-crt 
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
